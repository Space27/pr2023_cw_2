#pragma once#include "png_structs.h"#include "png_process_support.h"#include "png_io.h"#define CORD_BUF 5#define CORD_IN(X1, Y1, W, H) ((X1) >= 0 && (Y1) >= 0 && (X1) < (W) && (Y1) < (H))/* принимает искомый и конечный цвет, а также изображение, после чего мен€ет в нЄм все пиксели искомого цвета на конечный */void changeColor(Pixel src, Pixel dst, Image *img);/* принимает координаты левого верхнего и правого нижнего угла копируемой области, а также координаты левого верхнего угла области-получател€, копирует заданную копируемую область в заданную */void copyArea(int x1Src, int y1Src, int x2Src, int y2Src, int xDst, int yDst, Image *img);/* принимает координаты начала и конца пр€мого отрезка, рисует горизонтальную или вертикальную линию */void drawStraightLine(int x1, int y1, int x2, int y2, Pixel color, Image *img);/* провер€ет, лежит ли точка (x, y) хот€ бы в одном из пр€моугольников с координатами из cords */int isDotInRects(int x, int y, int **cords, int cordLen);/* принимает искомый цвет залитых пр€моугольников, а также цвет и толщину их обводки, после чего ищет все залитые пр€моугольники заданного цвета и обводит их лин€ми заданных параметров */void circleFilledRect(Pixel rectCol, Pixel strokeCol, int width, Image *img);/* расшир€ет изображение, прибавл€€ к каждой стороне по width */void expandImg(Image *img, int width);/* принимает указатель на формулу фрактала, компаратор, "стиль" фрактала, форму заливки, цвет рамки, еЄ ширину, после чего рисует соответствующую рамку */void drawFrameFrac(double (*frac)(double x, double y, double cx, double cy, int width, int height),				   int (*inv)(double first, double second),				   double style, int form, Pixel color, int width, Image *img);/* принимает указатель на операцию с двум€ числами, компаратор, "стиль", форму заливки, цвет рамки, еЄ ширину, после чего рисует соответствующую рамку */void drawFramePrime(int (*bitOp)(int a, int b), int (*inv)(double first, double second),					double style, int form, Pixel color, int width, Image *img);